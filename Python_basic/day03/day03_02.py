# 6. <자료형(서식문자 및 포맷팅 함수, f 포맷팅)>
# 서식문자란?
# 지정된 값을 여러가지 형태로 대입해서 출력해주는 기법

# 문자열 포맷팅(문자열에서만 사용가능한 내장 함수)
# 문자열이 아닌 다른 값(또는 문자열)을 특정 문자열 속에 가변적으로 변환시켜 대입할 떄 사용

# 문법 : 1) 서식문자
# print(" %문자" %(해당형태의 값))

#        2) 포맷팅함수
# print(" { :문자}".format(해당형태의 값))     # .은 연결연산자로 " ".는 문자열 안에 적용된다.  
#        3) f 포맷팅 [여기는 나중에 딕셔너리와 관련될 떄 자세히 봅니다.]
# print(f"{변수명(변수명에 저장된 값)}")


# 6_1) 서식문자
# 정수 지정 : "%d"
print("정수1: %d" %(100))   #튜플은 (1,2,3) 같이 묶는 녀석, 단일일떄는 그래서 생략 가능.
print("정수2: %d" %1 )
print("정수 2개 : %d    %d" %(100, 1))
print("정수연산 : %d" %(100 + 1))
print("고정길이 : |%5d|" %(100))

# 주의!
## print("갯수불일치 : %d" %(100,1))   #Error
## print("갯수불일치 : %d %d" %(100))  #Error ; 서식문자와 인수의 갯수는 동일
## print("서식%는 한번만 적용 가능 : %d %d" %(100), %(50))

# 문자열과 실수 지정    "%s" (문자열)  "%f" 및 "%.숫자f"(실수형)
print("%s님의 신장 : %f" %("CK", 173.055))
# %f는 실수형으로 소숫점 6자리까지 기본값으로 나타냄


