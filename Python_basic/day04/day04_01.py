# 서식 계속

print("%.2f     %.2f" %(4.67, 4.676))
#%.숫자f는 .오른쪽의 숫자가 소숫점 자릴수를 결정(반올림)

print("%s님의 신장 : |%10.2f|다." %("CK", 173.05))
# 고정길이 10자리 잡고, 소숫점 2번쨰 자리까지 나타냄



# 6_2) 포맷팅함수
print("{}는 {}다.".format("a", 10))
print("{}는 {}다.".format("a", "10"))
print("{}는 {}다.".format(1.01, 3.1415))

print("문자열 : {:s}, 정수 : {:d}".format("CK", 123))
# Python2.x때만 사용(지금은 x)

print("평점 : {}".format(3.14 * 0.1))
print("평점 : {:f}".format(3.14 + 1.0)) #%f와 동일

print("평점 : {:.2f}".format(3.144 + 1.0))
print("평점 : {:.2f}".format(3.145))
print("|{:6.2f}|".format(3.14))

# 포맷팅함수 {}는 문자열, 숫자, 객체 등 전부 다 표현 가능
# {: }는 포맷팅함수에서 어떤 기능으로 변환시켜서 추가 할 때 사용(실수)




# 6_3) 서식 및 포맷팅 오류(주의)
## print("%s       %d" %("CK", "29"))      #TypeError : %d는 숫자형만 대입 가능
print("%d       %.2f"  %(1.35, 2))          # 실수 -> 정수 (소숫점자릿수가 사라짐)
                                            # 정수 -> 실수 (소숫점이 붙음)

## print("%f"%("1.23"))                     # TypeError : %f는 숫자형만 대입 가능
print("%s       %s" %(27 + 1, 27.2 + 1))    # 원래는 오류, print가 자동으로 문자열로 변환해서
                                            # 출력하기 떄문에, 반영해서 가능하게 됨.
                                            # 원칙 : 문자열엔 숫자형은 일반적으로 될 수 x

##print("{:s}    {:d}    {:.2f}".format('100', 100.1, 100))
# {:f}는 정수, 실수 변환 가능(정수값이 실수형이 되지만, 크기값은 변하지 x )
# {:s}는 문자열 표기만 변환, {:d}는 소숫점 없는 정수만 변환

## print("{}와 {}와 {:.2f}".format('a', 10))    #Error : 포맷팅과 인수 갯수 일치
print("{}와 {}".format("a", 1, 1.12))

print("{1}   {0}".format("a", 1))
#인덱스번호 (첫번째 자리가 0번쨰 부터 시작)


#6_ f 포맷팅 
a = "최강"
print(f"{a}")
