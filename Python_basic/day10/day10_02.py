#day10_02.py

# 튜플, 리스트의 차이점

#1. 튜플은 소괄호 생략 가능, 리스트는 대괄호 생략 불가능
#2. 튜플 안에 묶인 자료값들은 요소값 변경이 불가능(상수계열),
#   리스트 안에 묶인 자료형들은 요소값 변경이 가능(변수계열)

# 13_2) 튜플 및 리스트 
# 인덱싱
# a = 1,2,3
# tup = tuple(a)
# lt = list(a)

# print(tup[0], lt[2])        # 인덱스 번호로 접근해서 묶음형 안에 요소값 추출
# print(type(tup), type(tup[1]))
# tup[0]는 튜플 tup의 0번쨰 인덱스 번호에 "위치"한 값


#13_2_2) 양수(0)와 음수 번호로 인덱싱
# print(tup[2], tup[-1]); print(tup[1], tup[-2])
# print(lt[0], lt[-3]); 


#13_2_3) 2차 이상 튜플 및 리스트 형식 인덱싱

a = [1,2, ['a', 'b', ['Life', 'Live']]]
b = (3, 4, ('c', 'd', ('Hello', 'Hi')))
c = [5, 6, ('e', ['f', 'g'])]

print(a[0], a[2], a[2][0], a[2][2][1])
#a[2][2][1]는 1차:2번째, 2차:2번째, 3차:1번째에 요소값 접근
print(c[-3], c[-1][-1][-2])

#13_2_4) 슬라이싱(slice) [인덱스번호를 범위로 지정해서 추출]
tup = 1, 2, 3
lt = [1, 2, 3]
#print(tup[3])은 인덱스 3번째인데, 없는 인덱스 번호시 "IndexError"

#슬라이싱의 기본 : tup[x:y]는 x인덱스 번호부터 y-1 인덱스 번호까지만 묶어서 추출
print(tup[0:2], tup[1:3], tup[-3: -1], tup[:1], sep=' ,')
print(lt[1:2], lt[0:3], lt[-1:], lt[:], sep=' ,')

# 슬라이싱 주의 사항 : 슬라이싱은 범위로 잡는거라 연결되어야 하며, 시작은 왼쪽부터 끌이 오른쪽!
print(tup[0:0], tup[-1:-3], lt[2:0])
